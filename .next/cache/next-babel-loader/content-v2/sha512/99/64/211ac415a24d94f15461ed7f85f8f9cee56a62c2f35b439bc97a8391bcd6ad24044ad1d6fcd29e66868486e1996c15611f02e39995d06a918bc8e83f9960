{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zeynepozdem/Desktop/blog-template/pages/blog/[...slug].jsx\";\nimport { getMdxNode, getMdxPaths } from \"next-mdx/server\";\nimport { mdxComponents } from \"@/components/mdx-components\";\nimport { useHydrate } from \"next-mdx/client\";\n\nfunction PostPage({\n  post\n}) {\n  const content = useHydrate(post, {\n    components: mdxComponents\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.frontMatter.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  return {\n    paths: await getMdxPaths(\"post\"),\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  const post = await getMdxNode(\"post\", context);\n\n  if (!post) {\n    return {\n      notFound: true\n    };\n  }\n\n  return {\n    props: {\n      post\n    }\n  };\n}\nexport default PostPage;","map":{"version":3,"sources":["/Users/zeynepozdem/Desktop/blog-template/pages/blog/[...slug].jsx"],"names":["getMdxNode","getMdxPaths","mdxComponents","useHydrate","PostPage","post","content","components","frontMatter","title","getStaticPaths","paths","fallback","getStaticProps","context","notFound","props"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,iBAAxC;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA0B;AACtB,QAAMC,OAAO,GAAGH,UAAU,CAACE,IAAD,EAAO;AAC7BE,IAAAA,UAAU,EAAEL;AADiB,GAAP,CAA1B;AAGA,sBAAO;AAAA,4BACH;AAAA,gBAAKG,IAAI,CAACG,WAAL,CAAiBC;AAAtB;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA,gBAAIJ,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAID;;AAED,OAAO,eAAeI,cAAf,GAAgC;AACrC,SAAO;AACLC,IAAAA,KAAK,EAAE,MAAMV,WAAW,CAAC,MAAD,CADnB;AAELW,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMT,IAAI,GAAG,MAAML,UAAU,CAAC,MAAD,EAASc,OAAT,CAA7B;;AAEA,MAAI,CAACT,IAAL,EAAW;AACT,WAAO;AACLU,MAAAA,QAAQ,EAAE;AADL,KAAP;AAGD;;AAED,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLX,MAAAA;AADK;AADF,GAAP;AAKD;AAEH,eAAeD,QAAf","sourcesContent":["import { getMdxNode, getMdxPaths } from \"next-mdx/server\"\nimport { mdxComponents } from \"@/components/mdx-components\"\nimport { useHydrate } from \"next-mdx/client\"\n\nfunction PostPage({post}) {\n    const content = useHydrate(post, {\n        components: mdxComponents,\n      })\n    return <div>\n        <h1>{post.frontMatter.title}</h1>\n        <p>{post.content}</p>\n    </div>\n  }\n  \n  export async function getStaticPaths() {\n    return {\n      paths: await getMdxPaths(\"post\"),\n      fallback: false,\n    }\n  }\n  \n  export async function getStaticProps(context) {\n    const post = await getMdxNode(\"post\", context)\n  \n    if (!post) {\n      return {\n        notFound: true,\n      }\n    }\n  \n    return {\n      props: {\n        post,\n      },\n    }\n  }\n\nexport default PostPage\n"]},"metadata":{},"sourceType":"module"}